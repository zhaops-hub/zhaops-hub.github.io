<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>zhaops&#39;s blog</title>
      <link href="/2020/05/23/README/"/>
      <url>/2020/05/23/README/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Apollo(阿波罗)分布式部署.md</title>
      <link href="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/"/>
      <url>/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。<br><a href="https://github.com/zhaops-hub/apollo" target="_blank" rel="noopener">github地址</a>  </p><p>直接搭建多环境Apollo  </p><p>Apollo目前支持以下环境：</p><ul><li>DEV: 开发环境</li><li>FAT：测试环境，相当于alpha环境(功能测试)</li><li>UAT：集成环境，相当于beta环境（回归测试）</li><li>PRO：生产环境  </li></ul><p>如果希望添加自定义的环境名称，<a href="https://github.com/ctripcorp/apollo/wiki/%E9%83%A8%E7%BD%B2&%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98#42-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%84%E7%8E%AF%E5%A2%83" target="_blank" rel="noopener">具体步骤可以参考</a></p><p><strong>本次部署 dev pro 两套环境</strong></p><table><thead><tr><th>IP</th><th>部署</th></tr></thead><tbody><tr><td>172.16.100.222</td><td>dev环境，mysql，包含管理页面 portal</td></tr><tr><td>172.16.100.101</td><td>pro环境</td></tr></tbody></table><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>本次部署是用docker部署<br>因为官方没有提供现成的镜像，但是提供了DockerFile ，需要自己打包</p><h3 id="下载源码自己编译，或者直接去github上去下载Release包"><a href="#下载源码自己编译，或者直接去github上去下载Release包" class="headerlink" title="下载源码自己编译，或者直接去github上去下载Release包"></a>下载源码自己编译，或者直接去github上去下载Release包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 下载源码</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;ctripcorp&#x2F;apollo.git</span><br></pre></td></tr></table></figure><p>结构如下  </p><ul><li>apollo-portal: 这个是管理页面</li><li>apollo-adminservice: apollo 服务端，相当于后台服务</li><li>apollo-configservice: apollo 注册中心</li></ul><p>一套环境（apollo-adminservice，apollo-configservice）两个服务，apollo-portal只部署一个就可以，可以配置多个环境进行管理</p><p><img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_1.png" alt="image"></p><p>编译代码（必须先装jdk 和 Maven ）<br>windows 直接双击 build.bat<br>linux build.sh<br><img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_2.png" alt="image"></p><p>编译完的截图</p><p><img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_3.png" alt="image"></p><h4 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h4><p>Apollo服务端共需要两个数据库：ApolloPortalDB和ApolloConfigDB，我们把数据库、表的创建和样例数据都分别准备了sql文件，只需要导入数据库即可。  </p><p>需要注意的是ApolloPortalDB只需要在生产环境部署一个即可，而ApolloConfigDB需要在每个环境部署一套，如fat、uat和pro分别部署3套ApolloConfigDB。</p><p>脚本在源码里面   </p><p><img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_4.png" alt="image"></p><p>命令行进入到mysql里面，source apolloportaldb.sql source ApolloPortalDB.sql ，或者直接navicat导入  </p><p> <img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_5.png" alt="image"></p><h4 id="打包镜像-apollo-configservice"><a href="#打包镜像-apollo-configservice" class="headerlink" title="打包镜像 apollo-configservice"></a>打包镜像 apollo-configservice</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"># 先打包镜像，先找到源码里面的DockerFile</span><br><span class="line"># apollo-configservice &gt; src &gt; main &gt; docker &gt; DockerFile</span><br><span class="line"></span><br><span class="line"># Dockerfile for apollo-configservice</span><br><span class="line"># 1. Copy apollo-configservice-$&#123;VERSION&#125;-github.zip to current directory</span><br><span class="line"># 2. Build with: docker build -t apollo-configservice .</span><br><span class="line"># 3. Run with: docker run -p 8080:8080 -e DS_URL&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;fill-in-the-correct-server:3306&#x2F;ApolloConfigDB?characterEncoding&#x3D;utf8&quot; -e DS_USERNAME&#x3D;FillInCorrectUser -e DS_PASSWORD&#x3D;FillInCorrectPassword -d -v &#x2F;tmp&#x2F;logs:&#x2F;opt&#x2F;logs --name apollo-configservice apollo-configservice</span><br><span class="line"></span><br><span class="line">FROM openjdk:8-jre-alpine</span><br><span class="line">MAINTAINER ameizi &lt;sxyx2008@163.com&gt;</span><br><span class="line"></span><br><span class="line">ENV VERSION 1.7.0-SNAPSHOT</span><br><span class="line">ENV SERVER_PORT 8080</span><br><span class="line"># DataSource Info</span><br><span class="line">ENV DS_URL &quot;&quot;</span><br><span class="line">ENV DS_USERNAME &quot;&quot;</span><br><span class="line">ENV DS_PASSWORD &quot;&quot;</span><br><span class="line"></span><br><span class="line">RUN echo &quot;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;alpine&#x2F;v3.8&#x2F;main&quot; &gt; &#x2F;etc&#x2F;apk&#x2F;repositories \</span><br><span class="line">    &amp;&amp; echo &quot;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;alpine&#x2F;v3.8&#x2F;community&quot; &gt;&gt; &#x2F;etc&#x2F;apk&#x2F;repositories \</span><br><span class="line">    &amp;&amp; apk update upgrade \</span><br><span class="line">    &amp;&amp; apk add --no-cache procps unzip curl bash tzdata \</span><br><span class="line">    &amp;&amp; ln -sf &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime \</span><br><span class="line">    &amp;&amp; echo &quot;Asia&#x2F;Shanghai&quot; &gt; &#x2F;etc&#x2F;timezone</span><br><span class="line"></span><br><span class="line">ADD apollo-configservice-$&#123;VERSION&#125;-github.zip &#x2F;apollo-configservice&#x2F;apollo-configservice-$&#123;VERSION&#125;-github.zip</span><br><span class="line"></span><br><span class="line">RUN unzip &#x2F;apollo-configservice&#x2F;apollo-configservice-$&#123;VERSION&#125;-github.zip -d &#x2F;apollo-configservice \</span><br><span class="line">    &amp;&amp; rm -rf &#x2F;apollo-configservice&#x2F;apollo-configservice-$&#123;VERSION&#125;-github.zip \</span><br><span class="line">    &amp;&amp; sed -i &#39;$d&#39; &#x2F;apollo-configservice&#x2F;scripts&#x2F;startup.sh \</span><br><span class="line">    &amp;&amp; chmod +x &#x2F;apollo-configservice&#x2F;scripts&#x2F;startup.sh \</span><br><span class="line">    &amp;&amp; echo &quot;tail -f &#x2F;dev&#x2F;null&quot; &gt;&gt; &#x2F;apollo-configservice&#x2F;scripts&#x2F;startup.sh</span><br><span class="line"></span><br><span class="line">EXPOSE $SERVER_PORT</span><br><span class="line"></span><br><span class="line">CMD [&quot;&#x2F;apollo-configservice&#x2F;scripts&#x2F;startup.sh&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 找到编译好的 apollo-configservice-1.7.0-SNAPSHOT-github.zip 包 ，根据它上面的dockerfile注释，把zip包放到当前目录，就可以打包了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># apollo-configservice &gt; target &gt; apollo-configservice-1.7.0-SNAPSHOT-github.zip</span><br></pre></td></tr></table></figure><p> <img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_6.png" alt="image"></p><p> 把 dockerfile 和 zip包传到服务上 docker build</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost configservice]# ls</span><br><span class="line">apollo-configservice-1.7.0-SNAPSHOT-github.zip  Dockerfile</span><br><span class="line">[root@localhost configservice]#  docker build -t apollo-configservice .</span><br><span class="line"></span><br><span class="line"># 打包镜像依赖基础镜像 openjdk:8-jre-alpine，如果有网络会自动下载，内网的可以直接导入</span><br></pre></td></tr></table></figure><h4 id="打包镜像-apollo-adminservice"><a href="#打包镜像-apollo-adminservice" class="headerlink" title="打包镜像 apollo-adminservice"></a>打包镜像 apollo-adminservice</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># 先打包镜像，先找到源码里面的DockerFile</span><br><span class="line"># apollo-adminservice &gt; src &gt; main &gt; docker &gt; DockerFile</span><br><span class="line"></span><br><span class="line"># Dockerfile for apollo-adminservice</span><br><span class="line"># 1. Copy apollo-adminservice-$&#123;VERSION&#125;-github.zip to current directory</span><br><span class="line"># 2. Build with: docker build -t apollo-adminservice .</span><br><span class="line"># 3. Run with: docker run -p 8090:8090 -e DS_URL&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;fill-in-the-correct-server:3306&#x2F;ApolloConfigDB?characterEncoding&#x3D;utf8&quot; -e DS_USERNAME&#x3D;FillInCorrectUser -e DS_PASSWORD&#x3D;FillInCorrectPassword -d -v &#x2F;tmp&#x2F;logs:&#x2F;opt&#x2F;logs --name apollo-adminservice apollo-adminservice</span><br><span class="line"></span><br><span class="line">FROM openjdk:8-jre-alpine</span><br><span class="line">MAINTAINER ameizi &lt;sxyx2008@163.com&gt;</span><br><span class="line"></span><br><span class="line">ENV VERSION 1.7.0-SNAPSHOT</span><br><span class="line">ENV SERVER_PORT 8090</span><br><span class="line"># DataSource Info</span><br><span class="line">ENV DS_URL &quot;&quot;</span><br><span class="line">ENV DS_USERNAME &quot;&quot;</span><br><span class="line">ENV DS_PASSWORD &quot;&quot;</span><br><span class="line"></span><br><span class="line">RUN echo &quot;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;alpine&#x2F;v3.8&#x2F;main&quot; &gt; &#x2F;etc&#x2F;apk&#x2F;repositories \</span><br><span class="line">    &amp;&amp; echo &quot;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;alpine&#x2F;v3.8&#x2F;community&quot; &gt;&gt; &#x2F;etc&#x2F;apk&#x2F;repositories \</span><br><span class="line">    &amp;&amp; apk update upgrade \</span><br><span class="line">    &amp;&amp; apk add --no-cache procps unzip curl bash tzdata \</span><br><span class="line">    &amp;&amp; ln -sf &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime \</span><br><span class="line">    &amp;&amp; echo &quot;Asia&#x2F;Shanghai&quot; &gt; &#x2F;etc&#x2F;timezone</span><br><span class="line"></span><br><span class="line">ADD apollo-adminservice-$&#123;VERSION&#125;-github.zip &#x2F;apollo-adminservice&#x2F;apollo-adminservice-$&#123;VERSION&#125;-github.zip</span><br><span class="line"></span><br><span class="line">RUN unzip &#x2F;apollo-adminservice&#x2F;apollo-adminservice-$&#123;VERSION&#125;-github.zip -d &#x2F;apollo-adminservice \</span><br><span class="line">    &amp;&amp; rm -rf &#x2F;apollo-adminservice&#x2F;apollo-adminservice-$&#123;VERSION&#125;-github.zip \</span><br><span class="line">    &amp;&amp; sed -i &#39;$d&#39; &#x2F;apollo-adminservice&#x2F;scripts&#x2F;startup.sh \</span><br><span class="line">    &amp;&amp; chmod +x &#x2F;apollo-adminservice&#x2F;scripts&#x2F;startup.sh \</span><br><span class="line">    &amp;&amp; echo &quot;tail -f &#x2F;dev&#x2F;null&quot; &gt;&gt; &#x2F;apollo-adminservice&#x2F;scripts&#x2F;startup.sh</span><br><span class="line"></span><br><span class="line">EXPOSE $SERVER_PORT</span><br><span class="line"></span><br><span class="line">CMD [&quot;&#x2F;apollo-adminservice&#x2F;scripts&#x2F;startup.sh&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 找到编译好的 apollo-adminservice-1.7.0-SNAPSHOT-github.zip 包 ，根据它上面的dockerfile注释，把zip包放到当前目录，就可以打包了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># apollo-adminservice &gt; target &gt; apollo-adminservice-1.7.0-SNAPSHOT-github.zip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 把 dockerfile 和 zip包传到服务上 docker build</span><br><span class="line"></span><br><span class="line">[root@localhost adminservice]# ls</span><br><span class="line">apollo-adminservice-1.7.0-SNAPSHOT-github.zip  Dockerfile</span><br><span class="line">[root@localhost adminservice]#  docker build -t apollo-adminservice .</span><br></pre></td></tr></table></figure><h4 id="打包镜像-apollo-portal"><a href="#打包镜像-apollo-portal" class="headerlink" title="打包镜像 apollo-portal"></a>打包镜像 apollo-portal</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"># 先打包镜像，先找到源码里面的DockerFile</span><br><span class="line"># apollo-portal &gt; src &gt; main &gt; docker &gt; DockerFile</span><br><span class="line"></span><br><span class="line"># Dockerfile for apollo-portal</span><br><span class="line"># 1. Copy apollo-portal-$&#123;VERSION&#125;-github.zip to current directory</span><br><span class="line"># 2. Build with: docker build -t apollo-portal .</span><br><span class="line"># 3. Run with: docker run -p 8070:8070 -e DS_URL&#x3D;&quot;jdbc:mysql:&#x2F;&#x2F;fill-in-the-correct-server:3306&#x2F;ApolloPortalDB?characterEncoding&#x3D;utf8&quot; -e DS_USERNAME&#x3D;FillInCorrectUser -e DS_PASSWORD&#x3D;FillInCorrectPassword -e DEV_META&#x3D;http:&#x2F;&#x2F;fill-in-dev-meta-server:8080 -e PRO_META&#x3D;http:&#x2F;&#x2F;fill-in-pro-meta-server:8080 -d -v &#x2F;tmp&#x2F;logs:&#x2F;opt&#x2F;logs --name apollo-portal apollo-portal</span><br><span class="line"></span><br><span class="line">FROM openjdk:8-jre-alpine</span><br><span class="line">MAINTAINER ameizi &lt;sxyx2008@163.com&gt;</span><br><span class="line"></span><br><span class="line">ENV VERSION 1.7.0-SNAPSHOT</span><br><span class="line">ENV SERVER_PORT 8070</span><br><span class="line"># DataSource Info </span><br><span class="line">ENV DS_URL &quot;&quot;</span><br><span class="line">ENV DS_USERNAME &quot;&quot;</span><br><span class="line">ENV DS_PASSWORD &quot;&quot;</span><br><span class="line"># Environmental variable declaration (meta server url, different environments should have different meta server addresses)</span><br><span class="line">ENV DEV_META &quot;&quot;</span><br><span class="line">ENV FAT_META &quot;&quot;</span><br><span class="line">ENV UAT_META &quot;&quot;</span><br><span class="line">ENV LPT_META &quot;&quot;</span><br><span class="line">ENV PRO_META &quot;&quot;</span><br><span class="line"></span><br><span class="line">RUN echo &quot;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;alpine&#x2F;v3.8&#x2F;main&quot; &gt; &#x2F;etc&#x2F;apk&#x2F;repositories \</span><br><span class="line">    &amp;&amp; echo &quot;http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;alpine&#x2F;v3.8&#x2F;community&quot; &gt;&gt; &#x2F;etc&#x2F;apk&#x2F;repositories \</span><br><span class="line">    &amp;&amp; apk update upgrade \</span><br><span class="line">    &amp;&amp; apk add --no-cache procps unzip curl bash tzdata \</span><br><span class="line">    &amp;&amp; ln -sf &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime \</span><br><span class="line">    &amp;&amp; echo &quot;Asia&#x2F;Shanghai&quot; &gt; &#x2F;etc&#x2F;timezone</span><br><span class="line"></span><br><span class="line">ADD apollo-portal-$&#123;VERSION&#125;-github.zip &#x2F;apollo-portal&#x2F;apollo-portal-$&#123;VERSION&#125;-github.zip</span><br><span class="line"></span><br><span class="line">RUN unzip &#x2F;apollo-portal&#x2F;apollo-portal-$&#123;VERSION&#125;-github.zip -d &#x2F;apollo-portal \</span><br><span class="line">    &amp;&amp; rm -rf &#x2F;apollo-portal&#x2F;apollo-portal-$&#123;VERSION&#125;-github.zip \</span><br><span class="line">    &amp;&amp; sed -i &#39;$d&#39; &#x2F;apollo-portal&#x2F;scripts&#x2F;startup.sh \</span><br><span class="line">    &amp;&amp; chmod +x &#x2F;apollo-portal&#x2F;scripts&#x2F;startup.sh \</span><br><span class="line">    &amp;&amp; echo &quot;tail -f &#x2F;dev&#x2F;null&quot; &gt;&gt; &#x2F;apollo-portal&#x2F;scripts&#x2F;startup.sh</span><br><span class="line"></span><br><span class="line">EXPOSE $SERVER_PORT</span><br><span class="line"></span><br><span class="line">CMD [&quot;&#x2F;apollo-portal&#x2F;scripts&#x2F;startup.sh&quot;]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 找到编译好的 apollo-adminservice-1.7.0-SNAPSHOT-github.zip 包 ，根据它上面的dockerfile注释，把zip包放到当前目录，就可以打包了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># apollo-portal &gt; target &gt; apollo-portal-1.7.0-SNAPSHOT-github.zip</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 把 dockerfile 和 zip包传到服务上 docker build</span><br><span class="line"></span><br><span class="line">[root@localhost portal]# ls</span><br><span class="line">apollo-portal-1.7.0-SNAPSHOT-github.zip  Dockerfile</span><br><span class="line">[root@localhost portal]# docker build -t apollo-portal .</span><br></pre></td></tr></table></figure><h3 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h3><p>都打完镜像查看一下 </p><p><img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_7.png" alt="image"></p><h4 id="编写docker-compose-yml"><a href="#编写docker-compose-yml" class="headerlink" title="编写docker-compose.yml"></a>编写docker-compose.yml</h4><p>利用docker-compose 服务编排，比较省事</p><p><strong>apollo.yml</strong></p><p>包含 adminservice,configservice</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;3&#39;</span><br><span class="line">services:</span><br><span class="line">  apollo-configservice:</span><br><span class="line">    container_name: configservice</span><br><span class="line">    image: apollo-configservice:latest # 镜像地址，这里使用的是直接在当前主机上构建的镜像</span><br><span class="line">    # ports:</span><br><span class="line">    #   - &quot;8080:8080&quot;</span><br><span class="line">    network_mode: host </span><br><span class="line">    volumes:</span><br><span class="line">      # 日志挂载</span><br><span class="line">      - &#x2F;usr&#x2F;local&#x2F;apollo&#x2F;servers&#x2F;server2&#x2F;logs&#x2F;apollo-configservice:&#x2F;opt&#x2F;logs</span><br><span class="line">    environment:</span><br><span class="line">      # 可通过 SERVER_PORT 指定默认启动端口，ports 也需要对应修改</span><br><span class="line">      # SERVER_PORT: 8080</span><br><span class="line">      # 指定 homePageUrl 为当前宿主的 apollo-configservice 地址，不然会出现无法访问</span><br><span class="line">      # JAVA_OPTS: &quot;-Deureka.instance.homePageUrl&#x3D;http:&#x2F;&#x2F;172.16.100.6:8080&quot;</span><br><span class="line">      # 数据库连接地址</span><br><span class="line">      DS_URL: &quot;jdbc:mysql:&#x2F;&#x2F;172.16.100.6:3306&#x2F;ApolloConfigDB?characterEncoding&#x3D;utf8&quot;</span><br><span class="line">      # 数据库用户名</span><br><span class="line">      DS_USERNAME: &quot;root&quot;</span><br><span class="line">      # 数据库密码 </span><br><span class="line">      DS_PASSWORD: &quot;abc123&quot;</span><br><span class="line">      # 服务器的端口</span><br><span class="line">      SERVER_PORT: 8080</span><br><span class="line">      </span><br><span class="line">  apollo-adminservice:</span><br><span class="line">    container_name: adminservice</span><br><span class="line">    image: apollo-adminservice:latest # 镜像地址，这里使用的是直接在当前主机上构建的镜像</span><br><span class="line">    # ports:</span><br><span class="line">    #   - &quot;8090:8090&quot;</span><br><span class="line">    network_mode: host </span><br><span class="line">    volumes:</span><br><span class="line">      # 日志挂载</span><br><span class="line">      - &#x2F;usr&#x2F;local&#x2F;apollo&#x2F;servers&#x2F;server2&#x2F;logs&#x2F;apollo-adminservice:&#x2F;opt&#x2F;logs</span><br><span class="line">    environment:</span><br><span class="line">      # 指定 homePageUrl 为当前宿主的 apollo-adminservice 地址，不然会出现无法访问</span><br><span class="line">      # JAVA_OPTS: &quot;-Deureka.instance.homePageUrl&#x3D;http:&#x2F;&#x2F;172.16.100.6:8090&quot;</span><br><span class="line">      # 数据库连接地址</span><br><span class="line">      DS_URL: &quot;jdbc:mysql:&#x2F;&#x2F;172.16.100.6:3306&#x2F;ApolloConfigDB?characterEncoding&#x3D;utf8&quot;</span><br><span class="line">      # 数据库用户名</span><br><span class="line">      DS_USERNAME: &quot;root&quot;</span><br><span class="line">      # 数据库密码 </span><br><span class="line">      DS_PASSWORD: &quot;abc123&quot;</span><br><span class="line">      # 服务器的端口</span><br><span class="line">      SERVER_PORT: 8090</span><br><span class="line">    depends_on:</span><br><span class="line">      - apollo-configservice</span><br></pre></td></tr></table></figure><p>启动容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost apollo]# docker-compose -f apollo.yml up -d</span><br></pre></td></tr></table></figure><p>测试一下</p><p><a href="http://192.168.179.130:8080/" target="_blank" rel="noopener">http://192.168.179.130:8080/</a> 访问8080页面查看注册情况 </p><p><img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_8.png" alt="image"></p><p><strong>portal.yml</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;3&#39;</span><br><span class="line">services:</span><br><span class="line">  apollo-portal:</span><br><span class="line">    image: apollo-portal:latest # 镜像地址，这里使用的是直接在当前主机上构建的镜像</span><br><span class="line">    container_name: apollo-portal</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8070:8070&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      # 日志挂载</span><br><span class="line">      - &#x2F;usr&#x2F;local&#x2F;apollo&#x2F;servers&#x2F;server1&#x2F;logs&#x2F;apollo-portal:&#x2F;opt&#x2F;logs  </span><br><span class="line">    environment:</span><br><span class="line">      # 数据库连接地址</span><br><span class="line">      DS_URL: &quot;jdbc:mysql:&#x2F;&#x2F;172.16.100.6:3306&#x2F;ApolloPortalDB?characterEncoding&#x3D;utf8&quot; </span><br><span class="line">      # 数据库用户名</span><br><span class="line">      DS_USERNAME: &quot;root&quot;</span><br><span class="line">      # 数据库密码      </span><br><span class="line">      DS_PASSWORD: &quot;abc123&quot;</span><br><span class="line">      # META_SERVER 地址，如 http:&#x2F;&#x2F;192.168.100.234:8080,http:&#x2F;&#x2F;192.168.100.234:8081（多个可用,分隔，建议使用 LB 域名）,</span><br><span class="line">      DEV_META: &quot;http:&#x2F;&#x2F;172.16.100.6:8080&quot;</span><br><span class="line">      PRO_META: &quot;http:&#x2F;&#x2F;172.16.100.6:8080&quot;</span><br></pre></td></tr></table></figure><p>启动容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost apollo]# docker-compose -f apollo-portal.yml up -d</span><br></pre></td></tr></table></figure><p>测试一下</p><p><a href="http://192.168.179.130:8070" target="_blank" rel="noopener">http://192.168.179.130:8070</a> 账号密码：apollo,admin </p><p>查看系统信息</p><p><img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_9.png" alt="image"></p><h3 id="部署多环境"><a href="#部署多环境" class="headerlink" title="部署多环境"></a>部署多环境</h3><p>PRO 生产环境  </p><p>其实多环境其实很简单，就是再多部署一个（adminservice,configservice），portal 就部署一套就可以，可以管理多套环境，注意数据库是一个环境一个数据库</p><p>生产环境只需要安装 adminservice 和 configservice  </p><h4 id="配置数据库-1"><a href="#配置数据库-1" class="headerlink" title="配置数据库"></a>配置数据库</h4><p>生一个 ApolloConfigDBPRO 数据库</p><p>进入mysql命令行 source ApolloConfigDBPRO.sql</p><p>直接把docker-compose.yml 脚本拿来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">version: &#39;3&#39;</span><br><span class="line">services:</span><br><span class="line">  apollo-configservice:</span><br><span class="line">    container_name: configservice</span><br><span class="line">    image: apollo-configservice:latest # 镜像地址，这里使用的是直接在当前主机上构建的镜像</span><br><span class="line">    #ports:</span><br><span class="line">    #  - &quot;8080:8080&quot;</span><br><span class="line">    network_mode: host</span><br><span class="line">    volumes:</span><br><span class="line">      # 日志挂载</span><br><span class="line">      - &#x2F;usr&#x2F;local&#x2F;apollo&#x2F;servers&#x2F;server2&#x2F;logs&#x2F;apollo-configservice:&#x2F;opt&#x2F;logs</span><br><span class="line">    environment:</span><br><span class="line">      # 可通过 SERVER_PORT 指定默认启动端口，ports 也需要对应修改</span><br><span class="line">      # SERVER_PORT: 8080</span><br><span class="line">      # 指定 homePageUrl 为当前宿主的 apollo-configservice 地址，不然会出现无法访问</span><br><span class="line">      # JAVA_OPTS: &quot;-Deureka.instance.homePageUrl&#x3D;http:&#x2F;&#x2F;172.16.100.6:8080&quot;</span><br><span class="line">      # 数据库连接地址</span><br><span class="line">      DS_URL: &quot;jdbc:mysql:&#x2F;&#x2F;172.16.100.6:3306&#x2F;ApolloConfigDBPRO?characterEncoding&#x3D;utf8&quot;</span><br><span class="line">      # 数据库用户名</span><br><span class="line">      DS_USERNAME: &quot;root&quot;</span><br><span class="line">      # 数据库密码 </span><br><span class="line">      DS_PASSWORD: &quot;abc123&quot;</span><br><span class="line">      SERVER_IP: &quot;172.16.100.6&quot;</span><br><span class="line"></span><br><span class="line">  apollo-adminservice:</span><br><span class="line">    container_name: adminservice</span><br><span class="line">    image: apollo-adminservice:latest # 镜像地址，这里使用的是直接在当前主机上构建的镜像</span><br><span class="line">    # ports:</span><br><span class="line">    #   - &quot;8090:8090&quot;</span><br><span class="line">    network_mode: host # 网络模式</span><br><span class="line">    volumes:</span><br><span class="line">      # 日志挂载</span><br><span class="line">      - &#x2F;usr&#x2F;local&#x2F;apollo&#x2F;servers&#x2F;server2&#x2F;logs&#x2F;apollo-adminservice:&#x2F;opt&#x2F;logs</span><br><span class="line">    environment:</span><br><span class="line">      # 指定 homePageUrl 为当前宿主的 apollo-adminservice 地址，不然会出现无法访问</span><br><span class="line">      # JAVA_OPTS: &quot;-Deureka.instance.homePageUrl&#x3D;http:&#x2F;&#x2F;172.16.100.6:8090&quot;</span><br><span class="line">      # 数据库连接地址</span><br><span class="line">      DS_URL: &quot;jdbc:mysql:&#x2F;&#x2F;172.16.100.6:3306&#x2F;ApolloConfigDBPRO?characterEncoding&#x3D;utf8&quot;</span><br><span class="line">      # 数据库用户名</span><br><span class="line">      DS_USERNAME: &quot;root&quot;</span><br><span class="line">      # 数据库密码 </span><br><span class="line">      DS_PASSWORD: &quot;abc123&quot;</span><br><span class="line">      SERVER_PORT: 8090</span><br><span class="line">    depends_on:</span><br><span class="line">      - apollo-configservice</span><br></pre></td></tr></table></figure><p>启动容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost apollo]# docker-compose -f apollo.yml up -d</span><br></pre></td></tr></table></figure><p>测试一下</p><p><a href="http://172.16.100.101:8080/" target="_blank" rel="noopener">http://172.16.100.101:8080/</a> 访问8080页面查看注册情况  </p><p><img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_10.png" alt="image"></p><h3 id="protal-管理页面配置多集群"><a href="#protal-管理页面配置多集群" class="headerlink" title="protal 管理页面配置多集群"></a>protal 管理页面配置多集群</h3><ul><li>找到 apolloportaldb.serverconfig :<ul><li>apollo.portal.envs: dev,pro</li><li>configView.memberOnly.envs: dev,pro</li></ul></li></ul><p>正在环境变量 PRO_META，PRO_META是生产环境对应的变量,直接在docker-compose.yml 配置文件中修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;3&#39;</span><br><span class="line">services:</span><br><span class="line">  apollo-portal:</span><br><span class="line">    image: apollo-portal:latest # 镜像地址，这里使用的是直接在当前主机上构建的镜像</span><br><span class="line">    container_name: apollo-portal</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8070:8070&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      # 日志挂载</span><br><span class="line">      - &#x2F;usr&#x2F;local&#x2F;apollo&#x2F;logs&#x2F;apollo-portal:&#x2F;opt&#x2F;logs</span><br><span class="line">    environment:</span><br><span class="line">      # 数据库连接地址</span><br><span class="line">      DS_URL: &quot;jdbc:mysql:&#x2F;&#x2F;172.16.100.222:3306&#x2F;ApolloPortalDB?characterEncoding&#x3D;utf8&quot;</span><br><span class="line">      # 数据库用户名</span><br><span class="line">      DS_USERNAME: &quot;root&quot;</span><br><span class="line">      # 数据库密码      </span><br><span class="line">      DS_PASSWORD: &quot;abc123&quot;</span><br><span class="line">      # META_SERVER 地址，如 http:&#x2F;&#x2F;192.168.100.234:8080,http:&#x2F;&#x2F;192.168.100.234:8081（多个可用,分隔，建议使用 LB 域名）,</span><br><span class="line">      DEV_META: &quot;http:&#x2F;&#x2F;172.16.100.222:8080&quot;</span><br><span class="line">      PRO_META: &quot;http:&#x2F;&#x2F;172.16.100.101:8080&quot;</span><br></pre></td></tr></table></figure><p>重启portal 容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f apollo-portal.yml restart</span><br></pre></td></tr></table></figure><p>查看系统信息</p><p><img src="/2020/05/23/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2/apollo_install_11.png" alt="image"></p><p><strong>如果在docker-compose.yml 配置文件里面配置的环境变量不起作用的话</strong><br><strong>首先进入到容器里面查看一下 echo $PRO_META</strong><br><strong>如果输出是空的话，那就是得先把容器卸载再起来，restart 不起作用的。</strong><br><strong>这个一定要注意</strong>  </p>]]></content>
      
      
      <categories>
          
          <category> Apollo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apollo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
